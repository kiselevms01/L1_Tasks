package main

import (
	"fmt"
)

// Запись квадрата элемента массива в канал
func SumSquare(val int, ch chan<- int) {
	fmt.Printf("Записано : %d\n", val*val)
	ch <- val * val
}

func main() {
	array := [5]int{2, 4, 6, 8, 10}
	ch := make(chan int) // Создадим канал для записи и чтения

	for _, val := range array {
		go SumSquare(val, ch)
	}

	var result int

	for i := 0; i < len(array); i++ { // Считываем значение из канала и прибавляем в результирующу пременную
		fmt.Printf("Итерация чтения : %d\n", i)
		result += <-ch // блокируем основной поток и ждем записи в канал
	}
	// Чтение из канала блочит основной поток, поэтому нет необходимости применять пакет sync
	// также в данном случае по условиям циклов из канала считывается ровно столько раз, сколько и записывается

	fmt.Println(result)

	/*
		Итерация чтения : 0
		Записано : 16
		Итерация чтения : 1
		Записано : 64
		Итерация чтения : 2
		Записано : 4
		Итерация чтения : 3
		Записано : 100
		Итерация чтения : 4
		Записано : 36
		220
	*/
}
